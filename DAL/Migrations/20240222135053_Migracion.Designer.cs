// <auto-generated />
using System;
using DAL.Entidades;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(PeriodicoContext))]
    [Migration("20240222135053_Migracion")]
    partial class Migracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entidades.Categoria", b =>
                {
                    b.Property<long>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_categoria");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdCategoria"));

                    b.Property<string>("DescCategoria")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("desc_categoria");

                    b.Property<string>("TipoCategoria")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tipo_categoria");

                    b.HasKey("IdCategoria")
                        .HasName("categorias_pkey");

                    b.ToTable("categorias", "prdc_schema");
                });

            modelBuilder.Entity("DAL.Entidades.Comentario", b =>
                {
                    b.Property<long>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_comentario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdComentario"));

                    b.Property<string>("DescComentario")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("desc_comentario");

                    b.Property<string>("FchPublicacionComentario")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fch_publicacion_comentario");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<long>("Id_Noticia")
                        .HasColumnType("bigint");

                    b.HasKey("IdComentario")
                        .HasName("comentarios_pkey");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("Id_Noticia");

                    b.ToTable("comentarios", "prdc_schema");
                });

            modelBuilder.Entity("DAL.Entidades.Noticia", b =>
                {
                    b.Property<long>("IdNoticia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_noticia");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdNoticia"));

                    b.Property<string>("DescNoticia")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnName("desc_noticia");

                    b.Property<string>("FchPublicacion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("fch_publicacion");

                    b.Property<long>("IdCategoriaNoticia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_categoria_noticia");

                    b.Property<long>("IdUsuarioNoticia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario_noticia");

                    b.Property<byte[]>("ImagenNoticia")
                        .HasColumnType("bytea")
                        .HasColumnName("imagen_noticia");

                    b.Property<bool?>("RequiereSuscripcion")
                        .HasColumnType("boolean")
                        .HasColumnName("requiere_suscripcion");

                    b.Property<string>("TituloNoticia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("titulo_noticia");

                    b.HasKey("IdNoticia")
                        .HasName("noticias_pkey");

                    b.HasIndex("IdCategoriaNoticia");

                    b.HasIndex("IdUsuarioNoticia");

                    b.ToTable("noticias", "prdc_schema");
                });

            modelBuilder.Entity("DAL.Entidades.NoticiaComentario", b =>
                {
                    b.Property<long>("IdComentario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_comentario");

                    b.Property<long>("IdNoticia")
                        .HasColumnType("bigint")
                        .HasColumnName("id_noticia");

                    b.HasIndex("IdComentario");

                    b.HasIndex("IdNoticia");

                    b.ToTable("noticia_comentarios", "prdc_schema");
                });

            modelBuilder.Entity("DAL.Entidades.Usuario", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdUsuario"));

                    b.Property<string>("ApellidosUsuario")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("apellidos_usuario");

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clave_usuario");

                    b.Property<bool>("CuentaConfirmada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("cuenta_confirmada");

                    b.Property<string>("DniUsuario")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("dni_usuario");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email_usuario");

                    b.Property<bool?>("EstadoSuscripcion")
                        .HasColumnType("boolean")
                        .HasColumnName("estado_suscripcion");

                    b.Property<DateTime?>("ExpiracionToken")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("expiracion_token");

                    b.Property<DateTime?>("FchAltaUsuario")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("fch_alta_usuario");

                    b.Property<DateTime?>("FchBajaUsuario")
                        .HasColumnType("timestamp(6) without time zone")
                        .HasColumnName("fch_baja_usuario");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("Rol")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("rol");

                    b.Property<string>("TlfUsuario")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("tlf_usuario");

                    b.Property<string>("TokenRecuperacion")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("token_recuperacion");

                    b.HasKey("IdUsuario")
                        .HasName("usuarios_pkey");

                    b.HasIndex(new[] { "DniUsuario" }, "usuarios_dni_usuario_key")
                        .IsUnique();

                    b.HasIndex(new[] { "EmailUsuario" }, "usuarios_email_usuario_key")
                        .IsUnique();

                    b.ToTable("usuarios", "prdc_schema_usuarios");
                });

            modelBuilder.Entity("DAL.Entidades.UsuarioComentario", b =>
                {
                    b.Property<long>("IdComentario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_comentario");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("id_usuario");

                    b.HasIndex("IdComentario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("usuario_comentarios", "prdc_schema");
                });

            modelBuilder.Entity("DAL.Entidades.Comentario", b =>
                {
                    b.HasOne("DAL.Entidades.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .IsRequired();

                    b.HasOne("DAL.Entidades.Noticia", "IdNoticiaNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("Id_Noticia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comentario_noticia");

                    b.Navigation("IdNoticiaNavigation");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DAL.Entidades.Noticia", b =>
                {
                    b.HasOne("DAL.Entidades.Categoria", "IdCategoriaNoticiaNavigation")
                        .WithMany("Noticia")
                        .HasForeignKey("IdCategoriaNoticia")
                        .IsRequired()
                        .HasConstraintName("fkab91df7dfpltux7gcrqjpru34");

                    b.HasOne("DAL.Entidades.Usuario", "IdUsuarioNoticiaNavigation")
                        .WithMany("Noticia")
                        .HasForeignKey("IdUsuarioNoticia")
                        .IsRequired()
                        .HasConstraintName("fkrbdei6nfn304qyyonge87ualu");

                    b.Navigation("IdCategoriaNoticiaNavigation");

                    b.Navigation("IdUsuarioNoticiaNavigation");
                });

            modelBuilder.Entity("DAL.Entidades.NoticiaComentario", b =>
                {
                    b.HasOne("DAL.Entidades.Comentario", "IdComentarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdComentario")
                        .IsRequired()
                        .HasConstraintName("fkf12y8y8spo9x27n69mvxjk9go");

                    b.HasOne("DAL.Entidades.Noticia", "IdNoticiaNavigation")
                        .WithMany()
                        .HasForeignKey("IdNoticia")
                        .IsRequired()
                        .HasConstraintName("fkqd9aagyg91260vcyh5aaph6xp");

                    b.Navigation("IdComentarioNavigation");

                    b.Navigation("IdNoticiaNavigation");
                });

            modelBuilder.Entity("DAL.Entidades.UsuarioComentario", b =>
                {
                    b.HasOne("DAL.Entidades.Comentario", "IdComentarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdComentario")
                        .IsRequired()
                        .HasConstraintName("fks60gdyncnkxtpby9t6q69cfva");

                    b.HasOne("DAL.Entidades.Usuario", "IdUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("fkejjm7tjlrrwb2ls7wa4awngf4");

                    b.Navigation("IdComentarioNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("DAL.Entidades.Categoria", b =>
                {
                    b.Navigation("Noticia");
                });

            modelBuilder.Entity("DAL.Entidades.Noticia", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("DAL.Entidades.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Noticia");
                });
#pragma warning restore 612, 618
        }
    }
}
